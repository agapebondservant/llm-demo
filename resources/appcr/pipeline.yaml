#@ load("@ytt:data", "data")
---
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: llm-image-processing-workflow
  volumes:
    - name: huggingface-repo-volume
      configMap:
        name: llm-pipeline-configmap
        defaultMode: 0777
spec:
  entrypoint: train
  templates:
    - name: train
      steps:
        - - name: create-custom-model-repo
            template: create-repo
        - - name: publish-model
            template: run-training
            arguments:
              parameters:
                - name: mlflow_entry
                  value: "publish_model"
        - - name: send-metadata
            template: run-training
            arguments:
              parameters:
                - name: mlflow_entry
                  value: "send_metadata"
        - - name: promote-model-to-staging
            template: run-training
            arguments:
              parameters:
                - name: mlflow_entry
                  value: "promote_model_to_staging"
        - - name: deploy-to-edge
            template: deploy-db
    - name: deploy-db
      container:
        image: docker/whalesay
        command: [ cowsay ]
        args: [ "This task will be responsible for migrating embeddings to edge DB instances" ]
        resources:
          limits:
            memory: 32Mi
            cpu: 100m
    - name: run-training
      inputs:
        parameters:
          - name: mlflow_entry
          - name: mlflow_stage
            value: "Staging"
          - name: git_repo
            value: #@ data.values.git_repo
          - name: experiment_name
            value: #@ data.values.experiment_name
          - name: environment_name
            value: #@ data.values.environment_name
          - name: model_repo
            value: #@ data.values.huggingface_repo
      container:
        image: oawofolu/llm-image-processor
        command: [ python ]
        args:
          - ./app/main.py
          - mlflow_entry="{{inputs.parameters.mlflow_entry}}"
          - mlflow_stage="{{inputs.parameters.mlflow_stage}}"
          - git_repo="{{inputs.parameters.git_repo}}"
          - experiment_name="{{inputs.parameters.experiment_name}}"
          - environment_name="{{inputs.parameters.environment_name}}"
    - name: create-repo
      inputs:
        parameters:
          - name: huggingface_repo
            value: #@ data.values.huggingface_repo
      container:
        image: #@ data.values.huggingface_image
        imagePullPolicy: Always
        command: [ /bin/sh ]
        args:
          - -c
          - /usr/local/create_custom_huggingface_repo.sh "{{inputs.parameters.huggingface_repo}}"
        volumeMounts:
          - name: huggingface-repo-volume
            mountPath: /usr/local