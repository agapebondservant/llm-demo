---
apiVersion: v1
kind: ConfigMap
metadata:
  name: setup-script-volume-configmap
data:
  setup.sql: |
    --liquibase formatted sql
    --changeset postgres:${XYZCHANGESETID}

    CREATE EXTENSION IF NOT EXISTS vector;
    CREATE EXTENSION IF NOT EXISTS pgml;

    CREATE TABLE IF NOT EXISTS ${XYZSCHEMA}.vmware_doc_scrape_metadata (
      id serial,
      url varchar(1000),
      summary text,
      token text,
      e5_large_token_embedding VECTOR(1024)
    );

    CREATE OR REPLACE FUNCTION ${XYZSCHEMA}.run_loader_task(
       url varchar(1000),
       data text,
       chunk_size smallint,
       chunk_overlap smallint)
    RETURNS INT AS
    '
    DECLARE
    return_count int;
    BEGIN
       WITH tokens AS (
          SELECT chunk_index, chunk
          FROM pgml.chunk(
            ''recursive_character'',
            data,
            json_build_object(''chunk_size'',chunk_size,''chunk_overlap'',chunk_overlap)::JSONB
          )
       )
       INSERT INTO ${XYZSCHEMA}.vmware_doc_scrape_metadata(url, token)
       SELECT url, chunk from tokens;
       GET DIAGNOSTICS return_count := ROW_COUNT;
       RETURN return_count;
    END
    '
    LANGUAGE plpgsql;

    CREATE OR REPLACE FUNCTION ${XYZSCHEMA}.backfill_embeddings()
    RETURNS text
    AS
    '
    DECLARE
    min_id integer;
    max_id integer;
    BEGIN
      SELECT min(id), max(id) FROM ${XYZSCHEMA}.vmware_doc_scrape_metadata INTO min_id, max_id;
      FOR i in min_id..max_id by 10 LOOP
        UPDATE ${XYZSCHEMA}.vmware_doc_scrape_metadata
        SET e5_large_token_embedding = pgml.embed(''intfloat/e5-large'', ''passage: '' || token)
        WHERE id BETWEEN i AND i + 10
            AND e5_large_token_embedding IS NULL;
      END LOOP;
      RETURN ''done'';
    END
    '
    LANGUAGE plpgsql;
---
apiVersion: batch/v1
kind: Job
metadata:
  name: liquibase
spec:
  ttlSecondsAfterFinished: 60
  template:
    spec:
      containers:
        - name: liquibase
          image: liquibase/liquibase:latest
          command:
            - liquibase
            - update
            - --changelog-file=changelog/setup.sql
            - --url=jdbc:${DATA_E2E_LIQUIBASE_TRAINING_DB_URI}
            - --username=postgres
            - --password=${DATA_E2E_BITNAMI_AUTH_PASSWORD}
            - --log-level=debug
          volumeMounts:
            - name: setup-script-volume
              mountPath: /liquibase/changelog

      volumes:
        - name: setup-script-volume
          configMap:
            name: setup-script-volume-configmap
      restartPolicy: Never
  backoffLimit: 4